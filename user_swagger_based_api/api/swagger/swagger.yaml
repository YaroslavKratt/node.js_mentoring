swagger: '2.0'
info:
  description: |
    This is a User service API
  version: 1.0.0
  title: Swagger User
tags:
- name: user
  description: Operations about user
# schemes:
# - http
paths:
  /users:
    post:
      tags:
      - user
      summary: Create or update user
      operationId: createUserOrUpdate
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created or updated user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: User created or updated
        400:
          description: Login or password don`t match schema
    get:
      tags:
      - user
      operationId: getAllUsers
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Get all users
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/User'
      responses:
        200:
          description: All users returned

  /users/{id}:
    get:
      tags:
      - user
      summary: Get user by user id
      operationId: getUserById
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
  /users/delete/{id}:
    post:
      tags:
      - user
      summary: Delete user
      operationId: deleteUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: User id that needs to be deleted
        required: true
        type: string
      responses:
        404:
          description: User not found
  /users/login/{login}:/limit/{limit}:
    get:
      tags:
      - user
      summary: Get user by user id
      operationId: getAutoSuggestUsers
      produces:
      - application/json
      parameters:
      - name: login
        in: path
        required: true
        type: string
      - name: limit
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
           type: array
           items:
            $ref: '#/definitions/User'
definitions:
  User:
    type: object
    properties:
      id:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
    xml:
      name: User
# Added by API Auto Mocking Plugin
host: localhost:3000
basePath: /
